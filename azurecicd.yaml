trigger:
- main

variables:
  imageRepository: 'my-container-registry.azurecr.io'
  imageTag: '$(Build.BuildId)'
  serviceName: 'my-service'
  devNamespace: 'dev'
  stagingNamespace: 'staging'
  prodNamespace: 'production'
  helmChartPath: './helm'
  environment: 'dev'  # Change this to 'staging' or 'production' for other environments

stages:
- stage: Build
  displayName: 'Build image and push to container registry'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and push image'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: 'build'
        containerRegistry: '$(dockerRegistry)'
        repository: '$(imageRepository)'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(imageTag)
          latest
    - task: Docker@2
      displayName: 'Push Docker image'
      inputs:
        command: 'push'
        containerRegistry: '$(dockerRegistry)'
        repository: '$(imageRepository)'
        tags: |
          $(imageTag)
          latest

- stage: Deploy
  displayName: 'Deploy to $(environment) environment'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy to $(environment)'
    pool:
      vmImage: 'ubuntu-latest'
    environment: $(environment)
    steps:
    - task: HelmInstaller@1
      displayName: 'Install Helm'
      inputs:
        helmVersionToInstall: 'latest'
    - task: HelmDeploy@0
      displayName: 'Deploy to Kubernetes cluster'
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceConnection: '$(kubernetesServiceConnection)'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: '$(helmChartPath)'
        releaseName: '$(serviceName)-$(environment)'
        install: true
        waitForExecution: true
        namespace: '$(devNamespace)'  # Change this to $(stagingNamespace) or $(prodNamespace) for other environments
        values: |
          image:
            repository: $(imageRepository)/$(serviceName)
            tag: $(imageTag)
          service:
            name: $(serviceName)-$(environment)
            port: 80
          ingress:
            enabled: true
            annotations:
              nginx.ingress.kubernetes.io/ssl-redirect: "false"
            hosts:
              - host: $(serviceName)-$(environment).mydomain.com
                paths:
                  - path: /
    - task: KubernetesManifest@0
      displayName: 'Apply Kubernetes manifests'
      inputs:
        kubernetesServiceConnection: '$(kubernetesServiceConnection)'
        namespace: '$(devNamespace)'  # Change this to $(stagingNamespace) or $(prodNamespace) for other environments
        manifests: |
          $(System.DefaultWorkingDirectory)/kubernetes-manifests/*.yaml
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Helm chart artifact'
      inputs:
        artifactName: 'helm-charts'
        targetPath: '$(helmChartPath)/charts'
